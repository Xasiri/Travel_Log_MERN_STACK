{"ast":null,"code":"var _jsxFileName = \"/home/asiri/Documents/MERN/MERN_FrontEnd/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  }); // if component function rerender this fn stored away by react and reuse\n\n  const InputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: InputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 characters).\",\n    onInput: InputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"ADD PLACE\"));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/home/asiri/Documents/MERN/MERN_FrontEnd/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Button","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","formState","dispatch","title","description","InputHandler","id","placeSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useCallback, useReducer} from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport Button from '../../shared/components/FormElements/Button';\nimport './NewPlace.css';\n\nconst formReducer = (state, action) =>{\n  switch(action.type){\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for(const inputId in state.inputs){\n        if(inputId === action.inputId){\n          formIsValid = formIsValid && action.isValid;\n        }else{\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs:{\n          ...state.inputs,\n          [action.inputId]: {value: action.value, isValid: action.isValid}\n        },\n        isValid: formIsValid\n      };\n      default:\n        return state;\n  }\n};\n\nconst NewPlace = () => {\n\n  const[formState, dispatch]=useReducer(formReducer, {\n    inputs: {\n      title:{\n        value: '',\n        isValid: false\n      },\n      description: {\n          value: '',\n          isValid: false\n      }\n    },\n    isValid: false\n  });\n  // if component function rerender this fn stored away by react and reuse\n  const InputHandler = useCallback((id, value, isValid) => {\n    dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId:id});\n   }, []);\n\n   const placeSubmitHandler = event =>{\n     event.preventDefault();\n     console.log(formState.inputs);\n   }\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      <Input\n      id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput ={InputHandler}\n      />\n      <Input\n      id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput ={InputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>ADD PLACE</Button>\n    </form>\n  ); \n};\n\nexport default NewPlace;"]},"metadata":{},"sourceType":"module"}